{"version":3,"sources":["components/App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","posts","setPosts","_useState3","_useState4","errorFetchingPosts","setErrorFetchingPosts","_useState5","_useState6","editMode","setEditMode","useEffect","axios","get","then","response","data","catch","console","log","react_default","a","createElement","className","length","map","post","key","id","title","concat","body","onClick","el","document","querySelector","text","innerText","editorContainer","editor","value","doneBtn","appendChild","parentNode","replaceChild","addEventListener","p","put","err","finally","onEdit","disabled","delete","filter","error","ReactDOM","render","components_App","getElementById"],"mappings":"qNAyGeA,MAtGf,WAAe,IAAAC,EACaC,mBAAS,IADtBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAEuCN,oBAAS,GAFhDO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEcE,EAFdF,EAAA,GAAAG,EAGmBV,oBAAS,GAH5BW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAGNE,EAHMD,EAAA,GAGIE,EAHJF,EAAA,GA4Fb,OAvFAG,oBAAU,WACRC,IACGC,IAAI,8CACJC,KAAK,SAAAC,GAAQ,OAAIb,EAASa,EAASC,QACnCC,MAAM,kBAAMX,GAAsB,MACpC,IA2CHY,QAAQC,IAAIlB,GAwCVmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,WAvCmB,IAAjBrB,EAAMuB,QAAiBnB,EAIvBA,EACK,wBAGFJ,EAAMwB,IAAI,SAAAC,GACf,OACEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,IAAKD,EAAKE,IAC9BR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAeG,EAAKG,OAClCT,EAAAC,EAAAC,cAAA,OAAKM,GAAE,aAAAE,OAAeJ,EAAKE,KACzBR,EAAAC,EAAAC,cAAA,SAAII,EAAKK,OAEXX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,sBACVS,QAAS,kBA9DN,SAAAJ,GACblB,GAAY,GACZ,IAAMuB,EAAKC,SAASC,cAAT,cAAAL,OAAqCF,EAArC,OACLQ,EAAOH,EAAGI,UAEVC,EAAkBJ,SAASZ,cAAc,OAC/CgB,EAAgBf,UAAY,yBAC5B,IAAMgB,EAASL,SAASZ,cAAc,YACtCiB,EAAOC,MAAQJ,EACflB,QAAQC,IAAIiB,GACZ,IAAMK,EAAUP,SAASZ,cAAc,UACvCmB,EAAQJ,UAAY,OACpBI,EAAQlB,UAAY,sBAEpBe,EAAgBI,YAAYH,GAC5BD,EAAgBI,YAAYD,GAE5BR,EAAGU,WAAWC,aAAaN,EAAiBL,GAE5CQ,EAAQI,iBAAiB,QAAS,WAChC,IAAMC,EAAIZ,SAASZ,cAAc,KACjCwB,EAAEvB,UAAF,aAAAO,OAA2BF,GAC3BkB,EAAET,UAAYE,EAAOC,MACrBF,EAAgBK,WAAWC,aAAaE,EAAGR,GAC3C1B,IACGmC,IADH,8CAAAjB,OACqDF,GAAM,CACvDG,KAAMQ,EAAOC,QAEd1B,KAAK,SAAAC,GAAQ,OAAIG,QAAQC,IAAI,gCAC7BF,MAAM,SAAA+B,GAAG,OAAI9B,QAAQC,IAAI6B,KACzBC,QAAQ,kBAAMvC,GAAY,OAgCNwC,CAAOxB,EAAKE,KAC3BuB,SAAU1C,GAHZ,aAOAW,EAAAC,EAAAC,cAAA,UACEC,UAAU,wBACVS,QAAS,kBAnCJJ,EAmCmBF,EAAKE,QAlCvChB,IACGwC,OADH,8CAAAtB,OACwDF,IACrDd,KAAK,SAAAE,GAAI,OAAId,EAASD,EAAMoD,OAAO,SAAA3B,GAAI,OAAIA,EAAKE,KAAOA,OACvDX,MAAM,SAAA+B,GAAG,OAAI9B,QAAQoC,MAAM,4BAA6BN,KAJ5C,IAAApB,GAoCLuB,SAAU1C,GAHZ,mBAtBC,qBCvDb8C,IAASC,OAAOpC,EAAAC,EAAAC,cAACmC,EAAD,MAASvB,SAASwB,eAAe","file":"static/js/main.e30ad128.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [errorFetchingPosts, setErrorFetchingPosts] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get('https://jsonplaceholder.typicode.com/posts')\n      .then(response => setPosts(response.data))\n      .catch(() => setErrorFetchingPosts(true));\n  }, []);\n\n  const onEdit = id => {\n    setEditMode(true);\n    const el = document.querySelector(`#post-body-${id} p`);\n    const text = el.innerText;\n\n    const editorContainer = document.createElement('div');\n    editorContainer.className = 'post__editor-container';\n    const editor = document.createElement('textarea');\n    editor.value = text;\n    console.log(text);\n    const doneBtn = document.createElement('button');\n    doneBtn.innerText = 'Done';\n    doneBtn.className = 'button button--info';\n\n    editorContainer.appendChild(editor);\n    editorContainer.appendChild(doneBtn);\n\n    el.parentNode.replaceChild(editorContainer, el);\n\n    doneBtn.addEventListener('click', () => {\n      const p = document.createElement('p');\n      p.className = `post-body-${id}`;\n      p.innerText = editor.value;\n      editorContainer.parentNode.replaceChild(p, editorContainer);\n      axios\n        .put(`https://jsonplaceholder.typicode.com/posts/${id}`, {\n          body: editor.value\n        })\n        .then(response => console.log('Successfully updated post!'))\n        .catch(err => console.log(err))\n        .finally(() => setEditMode(false));\n    });\n  };\n\n  const onDelete = id => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/posts/${id}`)\n      .then(data => setPosts(posts.filter(post => post.id !== id)))\n      .catch(err => console.error('Error deleting resource. ', err));\n  };\n\n  console.log(posts);\n\n  const renderPosts = () => {\n    if (posts.length === 0 && !errorFetchingPosts) {\n      return 'Loading...';\n    }\n\n    if (errorFetchingPosts) {\n      return 'Error fetching posts.';\n    }\n\n    return posts.map(post => {\n      return (\n        <div className=\"post\" key={post.id}>\n          <h2 className=\"post__title\">{post.title}</h2>\n          <div id={`post-body-${post.id}`}>\n            <p>{post.body}</p>\n          </div>\n          <div className=\"post__actions\">\n            <button\n              className=\"button button--info\"\n              onClick={() => onEdit(post.id)}\n              disabled={editMode}\n            >\n              Edit Post\n            </button>\n            <button\n              className=\"button button--danger\"\n              onClick={() => onDelete(post.id)}\n              disabled={editMode}\n            >\n              Delete Post\n            </button>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>REST API Practice</h1>\n      <hr />\n\n      {renderPosts()}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './style.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}